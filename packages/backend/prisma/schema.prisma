generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uwoId     String @id
  email     String @unique
  password  String
  firstName String
  lastName  String
  role      Role
  InstructorCourse InstructorCourse[]
}

model Department {
  departmentUuid  String    @id @default(uuid())
  departmentName  String    @unique
  departmentCode String @unique
  courses Course[]
}

model Course {
  courseUuid    String      @id @default(uuid())
  courseCode    String      
  semester      Term        
  year          Int    
  courseName    String      @unique
  department Department     @relation(fields: [departmentUuid], references: [departmentUuid])
  departmentUuid String
  InstructorCourse InstructorCourse[]
  courseOutlines  CourseOutline[]
}

model InstructorCourse {
  user    User  @relation(fields: [uwoId], references: [uwoId])
  uwoId   String
  course  Course  @relation(fields: [courseUuid], references: [courseUuid])
  courseUuid  String 
  @@id([uwoId, courseUuid])
}

enum Term {
  FALL
  WINTER
  SUMMER
}

enum Role {
  ADMINISTRATOR
  INSTRUCTOR
  DEPARTMENT_CHAIR
  ASSOCIATE_CHAIR
  PROGRAM_DIRECTOR
}

model Comments{
  commentId       String    @id @default(uuid())
  commentTxt      String 
  
}

model CourseOutline {
  courseUuid    String    
  course        Course    @relation(fields: [courseUuid], references: [courseUuid])
  versionNum    Int       //this values are set manually
  editLogs      EditLog[]
  titleLbl      String
  codeLbl       String
  yearLbl       String
  desLbl        String
insLbl          String
acaLbl          String
conLbl          String
antLbl          String
preLbl          String
coLbl           String
ceabLbl         String
reqTbLbl        String
othLbl          String
recRefLbl       String
knowLbl         String
useEngLbl       String
impLbl          String
proLbl          String
indLbl          String
ethLbl    String
  invLbl    String
  comLbl    String
  econLbl     String
  desiLbl     String
  profLbl     String
  lifeLbl     String
  top1Lbl     String
  top1aLbl    String
  top1bLbl    String
  top2Lbl     String
  top2aLbl    String
  top2bLbl    String
  top3Lbl     String
  top3aLbl    String
  top3bLbl    String
  top4Lbl     String
  top4aLbl    String
  top4bLbl    String
  homPercLbl    String
  quizPercLbl     String
  labPercLbl    String
  midPercLbl    String
  finPercLbl    String
  homLbl    String
  quiLbl    String
  labLbl    String
  midLbl    String
  finLbl    String
  lateLbl     String
  assSubLbl     String
  @@id([courseUuid, versionNum])
}

model EditLog {
  courseUuid    String  
  versionNum    Int        
  editNum       Int    //this values are set manually       
  courseOutline  CourseOutline     @relation(fields: [courseUuid,versionNum], references: [courseUuid, versionNum])
  @@id([courseUuid, versionNum])
}

